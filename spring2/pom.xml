<project xmlns="https://maven.apache.org/POM/4.0.0"
    xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="https://maven.apache.org/POM/4.0.0 
	https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.itwill</groupId>
    <artifactId>spring2</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>Spring Legacy 2</name>
    <description>Spring Legacy Project</description>

    <!--xml 파일에서 사용할 속성(변수) 선언 -->
    <properties><!-- 변수 정의: <jstl-version> , 값: 3.0.0  라이브러리 버전 정리 한 것.-->
        <jstl-version>3.0.0</jstl-version>
        <jslt-impl-version>3.0.1</jslt-impl-version>
        <log4j-version>2.23.1</log4j-version>
        <slf4j-api-version>2.0.13</slf4j-api-version>
        <junit-version>5.10.2</junit-version>
        <ojdbc11-version>23.4.0.24.05</ojdbc11-version>
        <hikaricp-version>5.1.0</hikaricp-version>
        <mybatis-version>3.5.16</mybatis-version>
        <mybatis-spring-version>3.0.3</mybatis-spring-version>
        <!-- <properties>안의 태그이름들은 맘대로 지어도 됨. <spring-version></spring-version>
		변수 이름 선언이라서 맘대로 지어도 된다고 함 -->
        <spring-version>6.1.8</spring-version>

        <!--jackson-databind -->
        <jackson-version>2.17.1</jackson-version>

        <!-- lombok 버전 번호를 상수로 선언함-->
        <lombok-version>1.18.32</lombok-version>
    </properties>

    <!--  <dependencies> : 프로젝트에서 필요한 의존성(라이브러리)들을 설정(선언)하는 부분 -->
    <dependencies>
        <!-- Tomcat 10.1.x에서 JSTL(Jakarta Standard Tag Library)를 사용하기 위한 설정 -->
        <!-- Jakarta Standard Tag Library API -->
        <dependency>
            <groupId>jakarta.servlet.jsp.jstl</groupId>
            <artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
            <version>${jstl-version}</version> <!-- <properties>에 정의
			되어있음.${jstl-version}이 부분이 3.0.0이 되는거라고..  -->
        </dependency>
        <!-- Jakarta Standard Tag Library Implementation -->
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>jakarta.servlet.jsp.jstl</artifactId>
            <version>${jslt-impl-version}</version>
        </dependency>

        <!-- Log4j, Slf4j 사용하기 위한 설정 --> <!--Log4j 현업에서 사용 많이 된다고 함 -->
        <!-- The Apache Log4j Implementation -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j-version}</version>
        </dependency>
        <!-- The Apache Log4j API -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j-version}</version>
        </dependency>
        <!-- The Apache Log4j SLF4J 2.0 API binding to Log4j 2 Core -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j2-impl</artifactId>
            <version>${log4j-version}</version>
        </dependency>
        <!-- The slf4j API -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api-version}</version>
        </dependency>

        <!-- 자바 단위 테스트(Java Unit Test)를 하기 위해서 -->
        <!-- Module "junit-jupiter-engine" of JUnit 5. -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-version}</version>
            <scope>test</scope>
            <!-- <scope>은 라이브러리를 어느 범위에서 사용 할건지 정의. test로 설정함. 배포 파일에 포함되면 안되서  -->
        </dependency>
        <!-- Module "junit-jupiter-api" of JUnit 5. -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Oracle JDBC 라이브러리 -->
        <!-- Oracle JDBC Driver compatible with JDK11, JDK12, JDK13, JDK14 and
        JDK15 -->
        <dependency> <!--만일 다른 DB쓸거면 이걸 지워버리고 다른 DB의 라이브러리를 찾아서 여기다 쓰면 된다고 함 -->
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc11</artifactId>
            <version>${ojdbc11-version}</version>
        </dependency>

        <!-- 데이터베이스 커넥션 풀 사용하기 위한 의존성 HikariCP-->
        <!--서버가 시작 될 때 최대 10개 까지 만들어 놓고 커넥션 빌려주고 반환해줌.-->
        <!-- Ultimate JDBC Connection Pool -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${hikaricp-version}</version>
        </dependency>
        <!--Spring Core 프레임 워크-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring-version}</version> <!-- 버전번호 위에 1개만 바꾸면 되도록 작성함 -->
        </dependency>

        <!--Spring Context -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <!-- Spring Web MVC --> <!-- 설정
		어렵지만 서블릿이 했던것들 대신 해준다고??함-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <!--Spring TestContext Framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>6.1.8</version>
        </dependency>

        <!-- General data-binding functionality for Jackson: works on core
		streaming API -->
        <!--데이터를 묶어주는 기눙 API ? -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-version}</version>
        </dependency>

        <!--Spice up your java: 
		Automatic Resource Management, automatic generation of getters, setters, equals, hashCode and toString, and more! -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok-version}</version>
            <scpope>compile</scpope> <!-- 의미 : 이 라이브러리는 프로젝트를 빌드할때만 (.class 파일로
			만들때 까지만) 
			사용하고 웹서버에 배포 되지 않게 설정. scope로 지정하지 않은 것들은 기본으로 웹서버에 배포 됨 -->
        </dependency>

        <!--Spring JDBC -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <!-- Spring Tx(Transaction) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <!--MyBatis SQL mapper framework -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis-version}</version>
        </dependency>

        <!--An easy-to-use Spring bridge for MyBatis SQL mapper framework -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>${mybatis-spring-version}</version>
        </dependency>

    </dependencies>

    <!--빌드 툴(플러그인) 설정 -->
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <release>21</release>
                    <!--자바버전(JDK) 21버전 이상이여야 된다는 뜻. 그 이하에서는 동작하지 않음. 버전 낮출수도 있다고..-->
                    <!-- 그럼 그 버전에 맞는 api를 이용해야 한다고 함.-->
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
            </plugin>
        </plugins>
    </build>
</project>