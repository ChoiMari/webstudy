<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
    xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
        http://mybatis.org/schema/mybatis-spring https://mybatis.org/schema/mybatis-spring.xsd">
 <!-- 스프링 프레임 워크에서 ContextLoaderListener가 사용(읽는파일)하는 xml파일로 web.xml에서 설정함. -->
 <!--마이바티스 스키마?? -->
    <!-- bean definitions here 빈 정의를 여기서 설정-->
    <!--ContextLoaderListener가 이 파일을 읽고 bean객체 생성함  -->
    <!-- HikariConfig 빈(bean)생성을 위한 설정. 빈(자바객체라고 생각) -->
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig"><!-- bean을 찾으려고 id설정. 변수이름만드는거라고 생각하라 하심 --> <!-- class=""패키지를 포함한 경로 쓰기 class에 넣은 생성자 호출해라 이런 뜻이라고..-->
    <!-- 기본생성자 호출한거라고 생각하면 됨. hikariConfig = new HikariConfig();와 같은 코드 -->
        <!-- setter 메서드 호출이라고 생각하면 됨. set+name메서드이름, 아규먼트로 들어가는 값이 value속성 -->
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" /><!-- 프로퍼티 속성 대소문자 구분함. 패키지 이름까지 포함해서 value넘김 -->
        <!-- config.setDriverClassName(new OracleDriver());와 같은거라고 함 -->
        
        <property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe" />
        <property name="username" value="jspstudy"/>
        <property name="password" value="jspstudy" /><!-- value 아규먼트로 전달하는 문자열 -->
    </bean>
    
    <!-- HikariDataSource 빈 생성을 위한 설정 -->
    <!-- ds = new HikariDataSource(hikariConfig);코드와 동일한 역할. 아규먼트를 갖는 생성자 호출해야함. -->
    <bean id="ds" class="com.zaxxer.hikari.HikariDataSource"><!-- id속성은 변수이름이라고 생각 class는 패키지이름 포함해서 작성(import문에서 쓴거 복붙하면 됨) -->
        <constructor-arg ref="hikariConfig" /><!-- 아규먼트를 갖는 객체 생성 방법 . ref레퍼런스 참조값(변수이름)-->
    </bean><!--hikariConfig객체와 ds객체 생성된 상태.  -->
    
    <!-- bean : 자바 객체. 자바에서는 객체 생성 위한 설계도를 클래스라고 부름. 
    실제 메모리에 생성된 객체를 인스턴스라고 부름.(메모리 heap에 있는)
    자바에서는 오브젝트라는 말을 많이 사용하고 웹에서는 bean이라고 생각하면 된다고
    자바에서 field필드를 web에서는 property(속성) bean으로 쓰려고 하는 애들은 기본생성자가 반드시 있어야한다고
    아규먼트가 있는 생성자를 만들면 프로그램에서 기본 생성자를 자동으로 만들어 주지 않음
    자바 개발자 철학 필드는 특별한 경우가 아니면 감추고 값을 읽거나 바꾸려면 메서드 호출(getter,setter)
    bean도 마찬가지 property도 감춰두고 getter&setter태그가 있음... 액션테그 참조(lab04의 action.jsp)
    어떤 객체 bean을 사용할건지 설정.
    자바빈하고는 좀 다르다고 함.
    지금 이건 스프링 빈(bean)
    기본생성자 이용 객체생성 가능하고 아규먼트 있는 생성자 에서도 객체생성가능하다고
    반드시 필요로 하는 객체들이 있는데 WAS 실행되면서 리스너가 이걸 읽어서 필요한 객체들을 미리 메모리에 생성해준다고함
    객체 생성, 객체가 가지고 있는 필드
    자바 빈이 직렬화 해야 되는 이유 -> ?? 설명해주셨는데 졸려서 못 받아 적음 -->
<!-- 어떤 빈들을 생성할건지 적는 파일 -->

    <!-- SqlSessionFactoryBean 생성을 위한 설정:
        데이터 소스를 이용해서 SQL 문장을 실행하고 그 결과를 처리해서 리턴할 수 있는 객체.
     -->
     <bean id="session" class="org.mybatis.spring.SqlSessionFactoryBean"><!-- 기본생성자 호출하는 것과 같은것 -->
        <property name="dataSource" ref="ds" /><!-- 프로퍼티 name속성 대소문자구분함 -->
        <property name="mapperLocations" value="classpath:/mappers/**/*.xml" /><!-- class에서 setter메서드 찾을수 있게 주어야함. 대소문자 구분 -->
        <!-- src폴더 밑의 mappers폴더 밑의 전부(몇단계밑이든 상관 없음 **) 모든 하위폴더를 검색하겠다. 이름이 뭐든 상관없음* 의 xml파일 -->
        <property name="configLocation" value="classpath:/mybatis-config.xml" /><!-- classpath는 빌드패스와 같은 개념이라고 생각하면 됨. 다이나믹 웹 프로젝트 새로 만들 때 빌드패스에 폴더이름 추가하기 했음. -->
        <!-- 그게 빌드패스이기도 하고 클래스패스이기도 하다고.. 폴더안에 있는것들을 빌드패스에 포함시켜서 같이 빌드가 될수있도록 설정한것. -->
        <!--  -->
     </bean>
     
     <!-- MyBatis-Spring 프레임 워크에서 생성하고 관리하는 bean 설정 :
        이게 해주는 일 : base-package와 그 하위 패키지에 있는 인터페이스를 구현한 객체를 
        생성해준다!-->
     <mybatis:scan base-package="com.itwill.spring2.repository" />
     <!--디스패쳐 서블릿이 스캔해서 @붙은 클래스들 bean으로 생성해서 관리하겠다 맞나?-->
     
 <!-- 스프링 컨테이너에서 컴포넌트 빈(예: @Service, @Component, ...)들을 검색할 기본 패키지를 설정 -->
 <!-- 스프링 컨테이너가 설정된 패키지(com.itwill.spring2.service)와 그 하위 패키지를 검색(스캔)해서
    컴포넌트애너테이션(@Service, @Component, ...)이 선언된 클래스의 객체를 생성하고 관리. 필요한곳에
    의존성을 주입해준다.
  -->
     <context:component-scan base-package="com.itwill.spring2.service" />
     
</beans>
